#Other stuff that dosen't fit elsewhere

# A virtual sdcard may be useful if the host machine is not fast
# enough to run OctoPrint well. It allows the Klipper host software to
# directly print gcode files stored in a directory on the host using
# standard sdcard G-Code commands (eg, M24).
[virtual_sdcard]
path: ~/gcode_files

# Filament switch sensor made out of the leftover Z-stop after BLTouch install
# Wired to X-max stop but you can pick any pin you want.
#[filament_switch_sensor filament_sensor]
#pause_on_runout: True
#switch_pin: ^!P1.28

# This adds pause/resume support
[pause_resume]

# This adds the 'respond' G-Code that you can use to send commands back to OctoPrint
[respond]
default_type: echo

# This enables a 'force_move' command ignoring all homing, Z-stops etc. Useful in debugging.
[force_move]
enable_force_move: True

# Handles M73 and M117 display status commands
[display_status]

[delayed_gcode my_delayed_gcode]
gcode:
  M119
initial_duration: 1

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}

[gcode_macro LIGHTS_OFF]
gcode:
  {action_call_remote_method("set_device_power",
                             device="light_strip",
                             state="off")}
[gcode_macro LIGHTS_ON]
gcode:
  {action_call_remote_method("set_device_power",
                             device="light_strip",
                             state="on")}

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

# Support for disabling the printer on an idle timeout
[idle_timeout]
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    M84
    TURN_OFF_HEATERS
  {% endif %}
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=60
timeout: 3600

# ToDO
#[input_shaper]
#shaper_freq_x: 73.8
#shaper_type_x: 3hump_ei
#shaper_freq_y: 56.2
#shaper_type_y: 3hump_ei

# ToDO
[gcode_arcs]
resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100