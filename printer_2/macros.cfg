#####################################################################
#    Macros
#####################################################################

[save_variables]
filename: /home/pi/klipper_config/printer_2/variables.cfg

[gcode_shell_command backup_cfg]
command: sh /home/pi/MyScripts/autocommit.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

[idle_timeout]
timeout: 1800

[pause_resume]

[respond]
default_type: command

[gcode_macro TOGGLE_LED]
gcode:
    {% if printer.save_variables.variables.led_status|int == 1 %}
        {action_call_remote_method("set_device_power", device="light_strip", state="off")}
        SAVE_VARIABLE VARIABLE=led_status VALUE=0
    {% else %}
        {action_call_remote_method("set_device_power", device="light_strip", state="on")}
        SAVE_VARIABLE VARIABLE=led_status VALUE=1        
    {% endif %}
    { action_respond_info("Toggle led.")}

[delayed_gcode INIT]
initial_duration: 1
gcode:
    PRINT MSG="Init..."
    ; set deault state of enclosure led
    SAVE_VARIABLE VARIABLE=led_status VALUE=1
    PRINT MSG="Ready"

[gcode_macro AUTO_SAVE_CONFIG]
gcode:
    {% if printer.configfile.save_config_pending %}
        PRINT MSG="Saving config"
        SAVE_CONFIG
    {% endif %}

# send custom msg
# OUTPUT_TARGET 0 : Both LCD and terminal , 1 : Terminal only , 2 : LCD only
[gcode_macro PRINT]
variable_parameter_MSG : ''
variable_parameter_OUTPUT_TARGET : 0
gcode:
    {% if params.OUTPUT_TARGET|default(0)|int == 0 %}
        M117 {params.MSG | string}
        { action_respond_info((params.MSG) | string)}
    {% elif params.OUTPUT_TARGET|default(0)|int == 1 %}
        { action_respond_info((params.MSG) | string)}
    {% elif params.OUTPUT_TARGET|default(0)|int == 2 %}
        M117 {params.MSG | string}
    {% else %}
        M117 {params.MSG | string}
    {% endif %}

[gcode_macro PRINT_START]
variable_parameter_EXTRUDER: 245
variable_parameter_BED: 110
variable_parameter_PRINT_MIN : 0,0
variable_parameter_PRINT_MAX : 0,0
gcode:
    CLEAR_PAUSE
    M220 S100 ; reset feedrate
    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ; use relative distances for extrusion
    TOGGLE_LED

    PRINT MSG="Homing..."
    G28

    G90
    G0 Z50 F3000 
    
    PRINT MSG="Waiting for temperature"

    ; preheat temp
    M140 S{params.BED|default(60)|float - 10}
    M104 S150

    ; wait
    M190 S{params.BED|default(60)|float - 10}

    ; set real temp
    M140 S{params.BED|default(60)|float}
    M104 S{params.EXTRUDER|default(200)|float}

    ; wait
    M190 S{params.BED|default(60)|float}
    M109 S{params.EXTRUDER|default(200)|float}

    PRINT MSG="Homing Z..."
    G28 Z ;re-home Z
    BED_MESH_CALIBRATE AREA_START={params.PRINT_MIN} AREA_END={params.PRINT_MAX}
    
    PRINT MSG="Prime Line"
    G92 E0 ;Reset Extruder
    G0 X180 Y15 F3000 ; move outside print area
    G1 Z0.2 F1000 ;Move to start position
    G1 X95 E9 F1000 ;Draw the first line
    G1 X85 F3000 ;Move to side a little
    G1 Y0 E21 F1500.0 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F1000 ;Move Z Axis up

    PRINT MSG="{printer.print_stats.filename}"

[gcode_macro PRINT_END]
gcode:
    PRINT MSG="Done printing!"
    G91 ; relative
    G1 E-2 F300
    {% if printer.toolhead.position.z <= 195 %}
        G0 Z5 F3000
    {% endif %}
    G90 ; absolute pos
    G1 X0 Y210 F3000
    TURN_OFF_HEATERS ; heaters off
    M84 ; disable steppers
    M107 ; fan off
    BED_MESH_CLEAR

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_OLD
gcode:
    PRINT MSG="Aborted!"
    G91 ; relative
    G1 E-2 F300 ; retract
    {% if printer.toolhead.position.z <= 195 %}
        G0 Z5 F3000
    {% endif %}
    G90
    G0 X0 Y210 F3000 ; park toolhead
    CLEAR_PAUSE
    TURN_OFF_HEATERS
    M84 ; disable steppers
    M107 ; fan off
    BED_MESH_CLEAR
    CANCEL_PRINT_OLD
    SDCARD_RESET_FILE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}